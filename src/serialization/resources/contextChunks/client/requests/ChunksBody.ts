/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '../../../..';
import * as PrivategptApi from '../../../../../api';
import * as core from '../../../../../core';

export const ChunksBody: core.serialization.Schema<
  serializers.ChunksBody.Raw,
  PrivategptApi.ChunksBody
> = core.serialization.object({
  text: core.serialization.string(),
  contextFilter: core.serialization.property(
    'context_filter',
    core.serialization
      .lazyObject(async () => (await import('../../../..')).ContextFilter)
      .optional(),
  ),
  limit: core.serialization.number().optional(),
  prevNextChunks: core.serialization.property(
    'prev_next_chunks',
    core.serialization.number().optional(),
  ),
});

export declare namespace ChunksBody {
  interface Raw {
    text: string;
    context_filter?: serializers.ContextFilter.Raw | null;
    limit?: number | null;
    prev_next_chunks?: number | null;
  }
}
