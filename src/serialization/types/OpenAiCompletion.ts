/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '..';
import * as PrivategptApi from '../../api';
import * as core from '../../core';

export const OpenAiCompletion: core.serialization.ObjectSchema<
  serializers.OpenAiCompletion.Raw,
  PrivategptApi.OpenAiCompletion
> = core.serialization.object({
  id: core.serialization.string(),
  object: core.serialization
    .lazy(async () => (await import('..')).OpenAiCompletionObject)
    .optional(),
  created: core.serialization.number(),
  model: core.serialization.unknown(),
  choices: core.serialization.list(
    core.serialization.lazyObject(
      async () => (await import('..')).OpenAiChoice,
    ),
  ),
});

export declare namespace OpenAiCompletion {
  interface Raw {
    id: string;
    object?: serializers.OpenAiCompletionObject.Raw | null;
    created: number;
    model?: unknown;
    choices: serializers.OpenAiChoice.Raw[];
  }
}
