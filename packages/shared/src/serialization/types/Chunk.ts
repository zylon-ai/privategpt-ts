/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from '..';
import * as PrivategptApi from '../../api';
import * as core from '../../core';

export const Chunk: core.serialization.ObjectSchema<
  serializers.Chunk.Raw,
  PrivategptApi.Chunk
> = core.serialization.object({
  object: core.serialization.unknown(),
  score: core.serialization.number(),
  document: core.serialization.lazyObject(
    async () => (await import('..')).IngestedDoc,
  ),
  text: core.serialization.string(),
  previousTexts: core.serialization.property(
    'previous_texts',
    core.serialization.list(core.serialization.string()).optional(),
  ),
  nextTexts: core.serialization.property(
    'next_texts',
    core.serialization.list(core.serialization.string()).optional(),
  ),
});

export declare namespace Chunk {
  interface Raw {
    object?: unknown;
    score: number;
    document: serializers.IngestedDoc.Raw;
    text: string;
    previous_texts?: string[] | null;
    next_texts?: string[] | null;
  }
}
